# Generated by Django 3.2.20 on 2023-08-30 00:20

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('homepage', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category_name', models.CharField(max_length=64, unique=True)),
                ('alt_name', models.CharField(max_length=64, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Download',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_url', models.URLField(blank=True, max_length=1024, null=True)),
                ('status', models.IntegerField(choices=[(0, 'draft'), (1, 'suspended'), (2, 'active')], default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=64, unique=True)),
                ('sku', models.CharField(max_length=64, unique=True)),
                ('price', models.DecimalField(decimal_places=2, max_digits=6)),
                ('description', models.TextField(max_length=256)),
                ('status', models.IntegerField(choices=[(0, 'draft'), (1, 'suspended'), (2, 'active')], default=0)),
                ('excerpt', models.CharField(max_length=128)),
                ('type', models.IntegerField(choices=[(0, 'pending'), (1, 'ownership'), (2, 'license')], default=1)),
                ('slug', models.SlugField(max_length=200, unique=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='')),
                ('image_url', models.URLField(blank=True, max_length=1024, null=True)),
                ('created_on', models.DateField(auto_now_add=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_authors', to=settings.AUTH_USER_MODEL)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='product_categories', to='product_service.category')),
                ('comments', models.ManyToManyField(blank=True, related_name='product_comments', to='homepage.Comment')),
                ('download_url', models.ManyToManyField(blank=True, related_name='product_downloads', to='product_service.Download')),
                ('likes', models.ManyToManyField(blank=True, related_name='product_likes', to='homepage.Like')),
            ],
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=64, unique=True)),
                ('sku', models.CharField(max_length=64, unique=True)),
                ('price', models.DecimalField(decimal_places=2, max_digits=6)),
                ('description', models.TextField(max_length=256)),
                ('status', models.IntegerField(choices=[(0, 'draft'), (1, 'suspended'), (2, 'active')], default=0)),
                ('excerpt', models.CharField(max_length=128)),
                ('type', models.IntegerField(choices=[(0, 'pending'), (1, 'ownership'), (2, 'license')], default=1)),
                ('slug', models.SlugField(max_length=200, unique=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='')),
                ('image_url', models.URLField(blank=True, max_length=1024, null=True)),
                ('created_on', models.DateField(auto_now_add=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='service_authors', to=settings.AUTH_USER_MODEL)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='service_categories', to='product_service.category')),
                ('comments', models.ManyToManyField(blank=True, related_name='service_comments', to='homepage.Comment')),
                ('download_url', models.ManyToManyField(blank=True, related_name='service_downloads', to='product_service.Download')),
                ('likes', models.ManyToManyField(blank=True, related_name='service_likes', to='homepage.Like')),
            ],
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sku', models.CharField(blank=True, max_length=64, null=True)),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('paid', models.DecimalField(decimal_places=2, max_digits=6)),
                ('item_url', models.URLField(blank=True, max_length=1024, null=True)),
                ('gateway', models.IntegerField(choices=[(0, 'pending'), (1, 'stripe'), (2, 'manual'), (3, 'crypto')], default=0)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('buyer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='buyer_transactions', to=settings.AUTH_USER_MODEL)),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='product_service.product')),
                ('service', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='product_service.service')),
            ],
        ),
        migrations.AddField(
            model_name='service',
            name='transactions',
            field=models.ManyToManyField(blank=True, related_name='service_transactions', through='product_service.Transaction', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='product',
            name='transactions',
            field=models.ManyToManyField(blank=True, related_name='product_transactions', through='product_service.Transaction', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='download',
            name='product',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='product_downloads', to='product_service.product'),
        ),
        migrations.AddField(
            model_name='download',
            name='service',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='service_downloads', to='product_service.product'),
        ),
    ]
