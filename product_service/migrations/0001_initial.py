# Generated by Django 3.2.20 on 2023-10-01 20:53

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import product_service.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('checkout', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('homepage', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category_name', models.CharField(max_length=64, unique=True)),
                ('alt_name', models.CharField(max_length=64, unique=True)),
            ],
            options={
                'verbose_name_plural': 'Categories',
                'ordering': ['category_name'],
            },
        ),
        migrations.CreateModel(
            name='CodeType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=64, unique=True)),
            ],
            options={
                'verbose_name_plural': 'CodeTypes',
                'ordering': ['code'],
            },
        ),
        migrations.CreateModel(
            name='Download',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_name', models.CharField(blank=True, max_length=64, null=True, unique=True)),
                ('file', models.FileField(blank=True, null=True, upload_to=product_service.models.custom_upload_to)),
                ('status', models.IntegerField(choices=[(0, 'Draft'), (1, 'Suspended'), (2, 'Active')], default=0)),
                ('token', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('download_token', models.CharField(max_length=12, unique=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['product', 'service'],
            },
        ),
        migrations.CreateModel(
            name='ServiceType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service', models.CharField(max_length=64, unique=True)),
            ],
            options={
                'verbose_name_plural': 'ServiceTypes',
                'ordering': ['service'],
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=64, unique=True)),
                ('sku', models.CharField(max_length=64, unique=True)),
                ('price', models.DecimalField(decimal_places=2, max_digits=6)),
                ('description', models.TextField(max_length=528)),
                ('status', models.IntegerField(choices=[(0, 'Draft'), (1, 'Suspended'), (2, 'Active')], default=0)),
                ('excerpt', models.CharField(max_length=264)),
                ('type', models.IntegerField(choices=[(0, 'NA'), (1, 'Ownership'), (2, 'License')], default=1)),
                ('instance', models.IntegerField(choices=[(0, 'Product'), (1, 'Service')], default=1)),
                ('preview', models.URLField(blank=True, max_length=1024, null=True, unique=True)),
                ('docs', models.URLField(blank=True, max_length=1024, null=True, unique=True)),
                ('slug', models.SlugField(blank=True, max_length=200, unique=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='')),
                ('image_url', models.URLField(blank=True, max_length=1024, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='service_authors', to=settings.AUTH_USER_MODEL)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='service_categories', to='product_service.category')),
                ('code', models.ManyToManyField(related_name='code_type_service', to='product_service.CodeType')),
                ('comments', models.ManyToManyField(blank=True, related_name='service_comments', to='homepage.Comment')),
                ('download_url', models.ManyToManyField(blank=True, related_name='service_downloads', to='product_service.Download')),
                ('likes', models.ManyToManyField(blank=True, related_name='service_likes', to='homepage.Like')),
                ('service', models.ManyToManyField(related_name='on_service_type', to='product_service.ServiceType')),
            ],
            options={
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=64, unique=True)),
                ('sku', models.CharField(max_length=64, unique=True)),
                ('price', models.DecimalField(decimal_places=2, max_digits=6)),
                ('description', models.TextField(max_length=528)),
                ('status', models.IntegerField(choices=[(0, 'Draft'), (1, 'Suspended'), (2, 'Active')], default=0)),
                ('excerpt', models.CharField(max_length=264)),
                ('type', models.IntegerField(choices=[(0, 'NA'), (1, 'Ownership'), (2, 'License')], default=1)),
                ('instance', models.IntegerField(choices=[(0, 'Product'), (1, 'Service')], default=0)),
                ('preview', models.URLField(blank=True, max_length=1024, null=True, unique=True)),
                ('docs', models.URLField(blank=True, max_length=1024, null=True, unique=True)),
                ('slug', models.SlugField(blank=True, max_length=200, unique=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='')),
                ('image_url', models.URLField(blank=True, max_length=1024, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='product_authors', to=settings.AUTH_USER_MODEL)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='product_categories', to='product_service.category')),
                ('code', models.ManyToManyField(related_name='code_type', to='product_service.CodeType')),
                ('comments', models.ManyToManyField(blank=True, related_name='product_comments', to='homepage.Comment')),
                ('download_url', models.ManyToManyField(blank=True, related_name='product_downloads', to='product_service.Download')),
                ('likes', models.ManyToManyField(blank=True, related_name='product_likes', to='homepage.Like')),
                ('orders', models.ManyToManyField(blank=True, related_name='product_orders', to='checkout.Order')),
                ('service', models.ManyToManyField(related_name='service_type', to='product_service.ServiceType')),
            ],
            options={
                'ordering': ['title'],
            },
        ),
        migrations.AddField(
            model_name='download',
            name='product',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='product_downloads', to='product_service.product'),
        ),
        migrations.AddField(
            model_name='download',
            name='service',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='service_downloads', to='product_service.service'),
        ),
    ]
